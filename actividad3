#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
#include <fcntl.h>
#include <assert.h>

#define READ  0
#define WRITE 1

int main() {
  char *const cmd[] ={"wc",NULL};
  char *const cmd_2[] ={"ls", NULL};
  char *comando[] = {"./rand_file",NULL};


  char strnum[4];
  int fid2;
  int  fid;
  int num;
  pid_t pid;
  int   fd[2];

  if (pipe(fd) == -1) {
        perror("Creating pipe");
        exit(EXIT_FAILURE);
  }

  switch(pid = fork()) {

  case 0:

        fid2=open("archivo.txt", O_RDONLY | O_CREAT);
        assert(fid2 != -1);
        read(fid2,strnum,4);
        num = atoi(strnum);
        if(num<500)
        {
        printf("menor que 500 \n");
        printf("%d\n",num);
        }
        else
        {
        printf("mayor que  500\n");
        printf("%d\n",num);
        }
        return 0;
  case -1:
        perror("fork() failed)");
        exit(EXIT_FAILURE);

  default:
        fid = open("archivo.txt",O_WRONLY | O_CREAT, S_IRWXU);
        assert(fid != -1);
        dup2(fid, STDOUT_FILENO);
        execvp(comando[0],comando);
        return 0;
  }
}
